// Auto-generated by PWA builder script v1.1.0
importScripts('https://storage.googleapis.com/workbox-cdn/releases/7.0.0/workbox-sw.js');

if (workbox) {
  console.log('Workbox is loaded.');

  self.addEventListener('message', (event) => {
    if (event.data && event.data.type === 'SKIP_WAITING') {
      console.log('Service Worker received SKIP_WAITING message, activating now.');
      self.skipWaiting();
    }
  });

  workbox.core.clientsClaim();

  // Precache (per discovered assets and PHP caching rule)
  workbox.precaching.precacheAndRoute([
    {
        "url": "icon-72.png",
        "revision": "be2d423b934b9c0b01d83184d3d4aa59"
    },
    {
        "url": "icon-96.png",
        "revision": "68bc111c2ddf34ecb0f446c5401b6906"
    },
    {
        "url": "icon-128.png",
        "revision": "190a33883d0b48d87d84cba89ef60d47"
    },
    {
        "url": "icon-144.png",
        "revision": "6a03fe4fafbbe1a7114f808f2c7e447a"
    },
    {
        "url": "icon-152.png",
        "revision": "71f71a48af9554d3087248e67965040f"
    },
    {
        "url": "icon-192.png",
        "revision": "445eafa87e5dae0090d9389487c5d532"
    },
    {
        "url": "icon-384.png",
        "revision": "3b1f7dea813cbec85b21ee8147eb5100"
    },
    {
        "url": "icon-512.png",
        "revision": "3d68d791052605e8692bab71b396a5f8"
    },
    {
        "url": ".gitattributes",
        "revision": "05bdb783ee6514c8c072e47680af8ff7"
    },
    {
        "url": "build pwa make php app offline and installable yasin best working re-run this for updates new.py",
        "revision": "2aeda70e7a739f6a0ee3671898caeb01"
    },
    {
        "url": "favicon.ico",
        "revision": "9443c975b011f43a500e86f7cf458a9e"
    },
    {
        "url": "index.html",
        "revision": "8c48af7ab6453d638f3151b60d060012"
    },
    {
        "url": "logo.jpg",
        "revision": "468c04fa7845a4946699daefb0de9c78"
    },
    {
        "url": "manifest.json",
        "revision": "5095ba6b1cf38f41b0eb800ec21a38b3"
    },
    {
        "url": "offline.html",
        "revision": "35337d1b1ac3cd8b168373daa82c6e3b"
    },
    {
        "url": "readme file for visitors.html.pdf",
        "revision": "cd7767728555c1a8c855bff8f43882be"
    },
    {
        "url": "sw.js",
        "revision": "554ffb3ab73e0bd5e8a5c6415dad4b18"
    }
]);

  // Runtime caching for CSS/JS
  workbox.routing.registerRoute(
    ({request}) => request.destination === 'style' || request.destination === 'script',
    new workbox.strategies.StaleWhileRevalidate({ cacheName: 'asset-cache' })
  );

  // Images cache
  workbox.routing.registerRoute(
    ({request}) => request.destination === 'image',
    new workbox.strategies.CacheFirst({
      cacheName: 'image-cache',
      plugins: [ new workbox.expiration.ExpirationPlugin({ maxEntries: 60, maxAgeSeconds: 30 * 24 * 60 * 60 }) ],
    })
  );

  // For PHP documents, use regular network; offline shows offline.html

  workbox.routing.registerRoute(( {request} ) => request.destination === 'document' && new URL(request.url).pathname.endsWith('.php'), new workbox.strategies.NetworkOnly());

  // Generic offline fallback for documents (HTML/PHP)
  workbox.routing.setCatchHandler(async ({event}) => {
    if (event.request && event.request.destination === 'document') {
      const cached = await caches.match('offline.html');
      return cached || Response.error();
    }
    return Response.error();
  });

} else {
  console.log('Workbox failed to load.');
}